--- a/agent/command.c
+++ b/agent/command.c
@@ -34,6 +34,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <dirent.h>
+#include <pth.h> /* we use pth_sleep */
 
 #include "agent.h"
 #include <assuan.h>
@@ -1514,7 +1515,34 @@ cmd_get_passphrase (assuan_context_t ctx
   if (!strcmp (desc, "X"))
     desc = NULL;
 
+retry:
   pw = cacheid ? agent_get_cache (cacheid, CACHE_MODE_USER) : NULL;
+  if (!pw)
+        {
+
+      /* If the pinentry is currently in use, we wait up to 60 seconds
+         for it to close and check the cache again.  This solves a common
+         situation where several requests for unprotecting a key have
+         been made but the user is still entering the passphrase for
+         the first request.  Because all requests to agent_askpin are
+         serialized they would then pop up one after the other to
+         request the passphrase - despite that the user has already
+         entered it and is then available in the cache.  This
+         implementation is not race free but in the worst case the
+         user has to enter the passphrase only once more. */
+      if (pinentry_active_p (ctrl, 0))
+        {
+          /* Active - wait */
+          if (!pinentry_active_p (ctrl, 60))
+            {
+              /* We need to give the other thread a chance to actually put
+                 it into the cache. */
+              pth_sleep (1);
+              goto retry;
+            }
+          /* Timeout - better call pinentry now the plain way. */
+        }
+    }
   if (pw)
     {
       rc = send_back_passphrase (ctx, opt_data, pw);
